/*
 *  Hoard Organizer - a program to keep track of stuff
 *  Copyright (C) 2012  Laura Herburger
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package laurah;

import javax.swing.*;
import javax.swing.border.Border;

import java.awt.event.*;
import java.awt.*;
import java.sql.*;

public class ViewListFrame extends JInternalFrame implements ActionListener
{
	private Connection conn;	// connection to DB
	private String listName;
	
	private String getTableString;
	
	// components
	private JLabel idLabel;
	private JTextField idTextField;
	private JPanel idPanel;
	
	private ViewListColumn one;
	private ViewListColumn two;
	private ViewListColumn three;
	private ViewListColumn four;
	private ViewListColumn five;
	
	private JButton addChangeButton;
	private JButton clearDeleteButton;
	private JButton clearSelectionButton;
	private JButton deleteListButton;
	
	private JTable listTable;
	private ListTableModel tableModel;
	
	public ViewListFrame(Connection c, String n, JDesktopPane d)
	{
		super(n, false, true); // only close option enabled
		
		conn = c;
		listName = n;
		
		// set up table
		getTableString = "SELECT * FROM " + HoardOrganizer.dbName + ".\"" + listName + "\"";
		
		try
		{
			Statement s = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
			ResultSet rs = s.executeQuery(getTableString);
			
			tableModel = new ListTableModel(rs);
			listTable = new JTable();
			listTable.setModel(tableModel);
		}
		catch (SQLException sqle)
		{
			JOptionPane.showMessageDialog(null, 
					"An Error Occurred", 
					"Error", JOptionPane.ERROR_MESSAGE);
			System.exit(0);
		}
		
		listTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		listTable.setRowSelectionAllowed(true);
		listTable.setColumnSelectionAllowed(false);
		
		// create GUI
		this.setSize(d.getSize());
		
		// set up other components
		idLabel = new JLabel("row ID");
		idTextField = new JTextField();
		idTextField.setColumns(10);
		idTextField.setEditable(false);
		idTextField.setMaximumSize(idTextField.getPreferredSize());
		
		idPanel = new JPanel();
		idPanel.setLayout(new BoxLayout(idPanel, BoxLayout.PAGE_AXIS));
		
		idPanel.add(idLabel);
		idPanel.add(idTextField);
		idPanel.setMaximumSize(idPanel.getPreferredSize());
	}
	
	public void actionPerformed(ActionEvent e) 
	{
		
	}

}

/*
 *  Hoard Organizer - a program to keep track of stuff
 *  Copyright (C) 2012  Laura Herburger
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package laurah;

import javax.swing.*;
import javax.swing.text.MaskFormatter;

import java.awt.Component;
import java.awt.event.*;

public class ViewListColumn extends JPanel
{
	private String colName;
	private String colType;
	
	private JLabel label;
	private JTextField textType;
	private JFormattedTextField integerType;
	private JFormattedTextField decimalType;
	
	// makes one with nothing enabled or visible
	// generally useless, but needed for current implementation
	// will be removed when implementation is improved
	public ViewListColumn() 
	{
		label = new JLabel("");
		label.setVisible(false);
		
		setUpComponents();
		
		setLayout(new BoxLayout(this, BoxLayout.PAGE_AXIS));
		
		add(label);
		add(textType);
		add(integerType);
		add(decimalType);
		label.setAlignmentX(Component.CENTER_ALIGNMENT);
	}
	
	// type should come from the list's "ref" table
	public ViewListColumn(String name, String type)
	{
		String temp = "";
		
		colName = name;
		colType = type;
		
		setUpComponents();
		
		temp = temp + colName + " (";
		
		if (colType.contains("VARCHAR"))
		{
			temp = temp + "Text";
			textType.setVisible(true);
			textType.setEnabled(true);
		}
		else if (colType.equals("INTEGER"))
		{
			temp = temp + "Integer";
			integerType.setVisible(true);
			integerType.setEnabled(true);
		}
		else if (colType.equals("DOUBLE"))
		{
			temp = temp + "Decimal";
			decimalType.setVisible(true);
			decimalType.setEnabled(true);
		}
		else {} // should not be reached
		
		temp = temp + ")";
		
		label = new JLabel(temp);
		
		setLayout(new BoxLayout(this, BoxLayout.PAGE_AXIS));
	}
	
	// does not include the label
	private void setUpComponents()
	{
		textType = new JTextField();
		textType.setColumns(20);
		textType.setVisible(false);
		textType.setEnabled(false);
		
		integerType = new JFormattedTextField(createFormatter("{-}#*"));
		integerType.setColumns(20);
		integerType.setVisible(false);
		integerType.setEnabled(false);
		
		decimalType = new JFormattedTextField(createFormatter("{-}#*.#*"));
		decimalType.setColumns(20);
		decimalType.setVisible(false);
		decimalType.setEnabled(false);
	}
	
	private MaskFormatter createFormatter(String s) 
	{
	    MaskFormatter formatter = null;
	    try 
	    {
	        formatter = new MaskFormatter(s);
	    } 
	    catch (java.text.ParseException exc) 
	    {
	    	JOptionPane.showMessageDialog(null, 
					"An Error Occurred", 
					"Error", JOptionPane.ERROR_MESSAGE);
			System.exit(0);
	    }
	    return formatter;
	}
}
